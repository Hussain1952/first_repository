name: Upload Local Test Result to QMetry

on:
  workflow_dispatch:  # Manual trigger
    inputs:
      test_cycle_key:
        description: "Test Cycle Key from webhook or QTM4J"
        required: false  # optional in case manual trigger

jobs:
  upload-to-qmetry:
    runs-on: ubuntu-latest

    env:
      QTM4J_API_KEY_HUSSAINAGAIN: ${{ secrets.QTM4J_API_KEY_HUSSAINAGAIN }}
      QTM4J_BASE_URL: ${{ secrets.QTM4J_BASE_URL }}     # e.g. https://jira.example.com
      RESULT_FILE: ./JUnit.xml                      # âœ… Path to your local XML file

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Step 0: Debug - print received test cycle key
      - name: "Debug: Print received test cycle key"
        run: |
          echo "Received test cycle key from webhook: '${{ github.event.inputs.test_cycle_key }}'"

      # Step 1: Save test cycle key dynamically
      - name: Save test cycle key
        run: |
          KEY="${{ github.event.inputs.test_cycle_key }}"
          if [ -z "$KEY" ]; then
            echo "No test cycle key provided. Using default placeholder."
            KEY="DEFAULT_TEST_CYCLE"
          fi
          echo "$KEY" > test_cycle_key.txt
          echo "Test cycle key saved: $KEY"

      # Step 2: Debug - check saved file
      - name: Check test_cycle_key.txt
        run: |
          echo "Contents of test_cycle_key.txt:"
          cat test_cycle_key.txt

      # Step 3: Get presigned upload URL from QMetry
      - name: Get presigned URL from QMetry
        id: presign
        run: |
          TEST_CYCLE_KEY=$(cat test_cycle_key.txt)
          cat > payload.json <<EOF
          {
            "format": "JUNIT",
            "isZip": false,
            "testCycleToReuse": "$TEST_CYCLE_KEY",
            "fields": {
              "testCase": {
                "status": "In Progress"
              }
            }
          }
          EOF

          echo "Payload being sent:"
          cat payload.json

          curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "apiKey: $QTM4J_API_KEY_HUSSAINAGAIN" \
            -d @payload.json \
            "$QTM4J_BASE_URL/rest/api/automation/importresult" \
            -o response.json
          echo "QMetry response:"
          cat response.json

          echo "upload_url=$(jq -r '.url' response.json)" >> "$GITHUB_OUTPUT"
          echo "tracking_id=$(jq -r '.trackingId' response.json)" >> "$GITHUB_OUTPUT"

      # Step 4: Upload local XML file using PUT with multipart/form-data
      - name: Upload XML file to QMetry (S3 presigned PUT)
        run: |
          echo "Uploading: ${RESULT_FILE}"
          ls -l "${RESULT_FILE}"

          curl --fail -X PUT \
             -H "Content-Type: multipart/form-data" \
             --data-binary "@${RESULT_FILE}" \
             "${{ steps.presign.outputs.upload_url }}"
